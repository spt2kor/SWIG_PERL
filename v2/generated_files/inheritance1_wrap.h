/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_INHRT_WRAP_H_
#define SWIG_INHRT_WRAP_H_

#include <map>
#include <string>


class SwigDirector_Employee : public Employee, public Swig::Director {

public:
    SwigDirector_Employee(SV *self, char const *n);
    virtual std::string getTitle();
    virtual std::string getName();
    virtual std::string getPosition() const;
    virtual ~SwigDirector_Employee();

/* Internal director utilities */
public:
    bool swig_get_inner(const char *swig_protected_method_name) const {
      std::map<std::string, bool>::const_iterator iv = swig_inner.find(swig_protected_method_name);
      return (iv != swig_inner.end() ? iv->second : false);
    }
    void swig_set_inner(const char *swig_protected_method_name, bool swig_val) const {
      swig_inner[swig_protected_method_name] = swig_val;
    }
private:
    mutable std::map<std::string, bool> swig_inner;
};

class SwigDirector_Manager : public Manager, public Swig::Director {

public:
    SwigDirector_Manager(SV *self, char const *n);
    virtual std::string getTitle();
    virtual std::string getName();
    virtual std::string getPosition() const;
    virtual ~SwigDirector_Manager();

/* Internal director utilities */
public:
    bool swig_get_inner(const char *swig_protected_method_name) const {
      std::map<std::string, bool>::const_iterator iv = swig_inner.find(swig_protected_method_name);
      return (iv != swig_inner.end() ? iv->second : false);
    }
    void swig_set_inner(const char *swig_protected_method_name, bool swig_val) const {
      swig_inner[swig_protected_method_name] = swig_val;
    }
private:
    mutable std::map<std::string, bool> swig_inner;
};

#endif
